// Generated by LiveScript 1.4.0
(function(){
  var map, hapi, zmq, server, io, subSock, pubSock;
  map = require('prelude-ls').map;
  hapi = require("hapi");
  zmq = require('zmq');
  server = new hapi.Server();
  server.connection({
    port: 4000
  });
  io = require('socket.io')(server.listener);
  subSock = zmq.socket('sub');
  pubSock = zmq.socket('pub');
  pubSock.connect('tcp://127.0.0.1:5012');
  subSock.connect('tcp://127.0.0.1:5013');
  subSock.subscribe('');
  process.on('SIGINT', function(){
    subSock.close();
    pubSock.close();
    return console.log('Received SIGINT, zmq sockets are closed...');
  });
  io.on('connection', function(socket){
    console.log("new client connected, starting its forwarder...");
    socket.on("aktos-message", function(message){
      console.log("aktos-message from browser: ", message, 'broadcasting all others');
      socket.broadcast.emit('aktos-message', message);
      socket.emit('aktos-message', message);
      return pubSock.send(message);
    });
    return subSock.on('message', function(message){
      message = message.toString();
      console.log('Forwarding zmq message to socket.io: ', message);
      return socket.broadcast.emit('aktos-message', message);
    });
  });
  server.route({
    method: 'GET',
    path: '/',
    handler: {
      file: './public/index.html'
    }
  });
  server.route({
    method: 'GET',
    path: '/{filename*}',
    handler: {
      file: function(request){
        return './public/' + request.params.filename;
      }
    }
  });
  server.route({
    method: 'GET',
    path: '/static/{filename*}',
    handler: {
      file: function(request){
        return './public/' + request.params.filename;
      }
    }
  });
  server.start(function(){
    console.log("Server running at:", server.info.uri);
  });
}).call(this);
